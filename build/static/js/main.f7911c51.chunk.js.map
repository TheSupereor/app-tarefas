{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","tarefas","setarTarefas","modal","setModal","marcarConcluida","id","opt","novasTarefas","filter","val","finalizada","window","localStorage","setItem","JSON","stringify","abrirModal","deletarTarefa","useEffect","undefined","getItem","parse","className","onClick","type","tarefa","document","getElementById","Date","getTime","value","salvarTarefa","map","style","textDecoration","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"2OAsJeA,MAlJf,WAEE,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAgBC,EAAhB,KAeA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAoCMC,EAAkB,SAACC,EAAIC,GAC3B,IAAIC,EAAeP,EAAQQ,QAAO,SAASC,GAKzC,OAJIA,EAAIJ,IAAMA,IACZI,EAAIC,WAAaJ,GAGZG,KAGTR,EAAaM,GAGbI,OAAOC,aAAaC,QAAQ,UAAWC,KAAKC,UAAUR,KAGlDS,EAAa,WAIjBb,GAAUD,IAGNe,EAAgB,SAACZ,GACrB,IAAIE,EAAeP,EAAQQ,QAAO,SAASC,GACzC,GAAIA,EAAIJ,IAAMA,EACZ,OAAOI,KAIbR,EAAaM,IAab,OARAW,qBAAU,gBAEqCC,GAA1CR,OAAOC,aAAaQ,QAAQ,YAE7BnB,EAAaa,KAAKO,MAAMV,OAAOC,aAAaQ,QAAQ,eAEtD,IAGA,sBAAKE,UAAU,MAAf,UAKIpB,EAEA,qBAAKoB,UAAU,QAAf,SACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,SAAf,UACE,sDACA,sBAAMC,QAAS,kBAAIP,KAAnB,kBAEF,uBAAOX,GAAG,iBAAiBmB,KAAK,SAChC,wBAAQD,QAAS,kBA3FN,WAEnB,IAAIE,EAASC,SAASC,eAAe,kBAGrC1B,EAAa,GAAD,mBAGPD,GAHO,CAIV,CAEEK,IAAI,IAAIuB,MAAOC,UACfJ,OAAQA,EAAOK,MACfpB,YAAY,MAQhBC,OAAOC,aAAaC,QAAQ,UAAWC,KAAKC,UAAL,sBAAmBf,GAAnB,CACrC,CAEEK,IAAI,IAAIuB,MAAOC,UACfJ,OAAQA,EAAOK,MACfpB,YAAY,OAIhBP,GAAS,GA6DoB4B,IAArB,0BAKJ,wBAGF,qBAAKR,QAAS,kBAAIP,KAAcM,UAAU,YAA1C,eACA,sBAAKA,UAAU,aAAf,UACE,wDAEEtB,EAAQgC,KAAI,SAACvB,GACX,OAAIA,EAAIC,WASJ,sBAAKY,UAAU,eAAf,UACA,mBAAGC,QAAS,kBAAInB,EAAgBK,EAAIJ,IAAI,IAAQ4B,MAAO,CAACC,eAAe,gBAAvE,SAAyFzB,EAAIgB,SAC7F,sBAAMF,QAAS,kBAAIN,EAAcR,EAAIJ,KAAK4B,MAAO,CAACE,MAAM,OAAxD,kBATA,sBAAKb,UAAU,eAAf,UACA,mBAAGC,QAAS,kBAAInB,EAAgBK,EAAIJ,IAAI,IAAxC,SAAgDI,EAAIgB,SACpD,sBAAMF,QAAS,kBAAIN,EAAcR,EAAIJ,KAAK4B,MAAO,CAACE,MAAM,OAAxD,4BCvHDC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFrB,SAASC,eAAe,SAM1BS,M","file":"static/js/main.f7911c51.chunk.js","sourcesContent":["import './App.css';\nimport {useState, useEffect} from 'react';\nimport reactDom from 'react-dom';\n\nfunction App() {\n\n  const [tarefas, setarTarefas] = useState([\n    /*\n    {\n      id:0,\n      tarefa:'Minha tarefa do dia',\n      finalizada:false\n    },\n    {\n      id:1,\n      tarefa:'Minha tarefa do dia',\n      finalizada:true\n    }\n    */\n\n  ]);\n  const [modal, setModal] = useState(false);\n\n  const salvarTarefa = () => {\n    // TO Do: Salvar a tarefa.\n    var tarefa = document.getElementById('content-tarefa');\n\n    //adicionando um array\n    setarTarefas([\n      //os 3 pontos recuperam tudo o que há dentro do array e coloca\n      //o que tiver depois da vírgula logo depois, pode ser o inverso também\n      ...tarefas,\n      {\n        //criando um id apartir da hora atual, para ser único sempre\n        id: new Date().getTime(),\n        tarefa: tarefa.value,\n        finalizada: false\n      }\n    ]);\n\n    //armazenar as tarefas no storage local\n    //colocando em JSON, como strings, para possibilitar a recuperação fácil\n    //recuperar todas as tarefas sem ter que ter um load adicional, através do\n    //... tarefas\n    window.localStorage.setItem('tarefas', JSON.stringify([...tarefas,\n      {\n        //criando um id apartir da hora atual, para ser único sempre\n        id: new Date().getTime(),\n        tarefa: tarefa.value,\n        finalizada: false\n      }\n    ]));\n\n    setModal(false);\n\n  }\n\n  const marcarConcluida = (id, opt) => {\n    let novasTarefas = tarefas.filter(function(val){\n      if (val.id == id){\n        val.finalizada = opt;\n      }\n\n      return val;\n    })\n\n    setarTarefas(novasTarefas);\n    //armazenar tarefas concluídas\n    //colocando em JSON, como strings, para possibilitar a recuperação fácil\n    window.localStorage.setItem('tarefas', JSON.stringify(novasTarefas));\n  }\n\n  const abrirModal = () => {\n    //modal é uma maneira de abrir uma view acima da página inicial\n    //ou seja, uma janela em cima da view princial do site\n    //abrir modal acontece baseado no estado\n    setModal(!modal);\n  }\n\n  const deletarTarefa = (id)=>{\n    let novasTarefas = tarefas.filter(function(val){\n      if (val.id != id){\n        return val;\n      }\n\n  })\n  setarTarefas(novasTarefas);\n\n}\n\n   // \\/ Usado para fazer uma chamada para API e preencher o estado tarefas \n  useEffect(()=>{\n    //recuperar os itens do storage\n    if(window.localStorage.getItem('tarefas') != undefined){\n      //JSON.parse vai recuperar uma string JSON e transformar em um objeto de novo\n      setarTarefas(JSON.parse(window.localStorage.getItem('tarefas')));\n    }\n  },[])\n\n  return (\n    <div className=\"App\">\n\n      {\n        //quando essas chaves são utilizadas são como uma função if\n        //que exigem os dois pontos ( : ) como segunda opção\n        modal?\n        //Se a modal for true acontece isso:\n        <div className=\"modal\">\n          <div className=\"modalContent\">\n            <div className=\"titulo\">\n              <h3>Adicionar sua tarefa</h3>\n              <span onClick={()=>abrirModal()}>X</span>\n            </div>\n            <input id=\"content-tarefa\" type=\"text\"></input>\n            <button onClick={()=>salvarTarefa()}>Salvar!</button>\n          </div>\n        </div>\n        //Se não for true acontece isso:\n        :\n        <div></div>\n      }\n\n      <div onClick={()=>abrirModal()} className=\"addTarefa\">+</div>\n      <div className=\"boxTarefas\">\n        <h2>Minhas tarefas do dia!</h2>\n        {\n          tarefas.map((val)=>{\n            if(!val.finalizada){\n              return(\n                <div className=\"tarefaSingle\">\n                <p onClick={()=>marcarConcluida(val.id, true)}>{val.tarefa}</p>\n                <span onClick={()=>deletarTarefa(val.id)} style={{color:'red'}}>X</span>\n                </div>\n              );\n            }else{\n              return(\n                <div className=\"tarefaSingle\">\n                <p onClick={()=>marcarConcluida(val.id, false)} style={{textDecoration:'line-through'}}>{val.tarefa}</p>\n                <span onClick={()=>deletarTarefa(val.id)} style={{color:'red'}}>X</span>\n                </div>\n              )\n            }\n          })\n        }\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n// para iniciar a aplicação somente para si: ir para o cmd, na pasta do projeto\n// digitar \"npm start\"\n// relaxa, demora um pouco normalmente\n\n// para dar host através do firebase: cmd, na pasta do projeto, dar \"npm run build\"\n// depois dar \"firebase deploy\", ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}